# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: C/I

on:
  push:
    branches:
      - ci

  # from collector and contrib repo
  repository_dispatch:
    types: [dependency-build]

env:
  IMAGE_NAME: aws-otel-collector
  PACKAGING_ROOT: build/packages
  ECR_REPO: aws/aws-otel-collector
  TF_VAR_aws_access_key_id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
  PKG_SIGN_PRIVATE_KEY_NAME: aoc-linux-pkg-signing-gpg-key
  WIN_UNSIGNED_PKG_BUCKET: aoc-aws-signer-unsigned-artifact-src
  WIN_SIGNED_PKG_BUCKET: aoc-aws-signer-signed-artifact-dest
  WIN_UNSIGNED_PKG_FOLDER: OTelCollectorAuthenticode/AuthenticodeSigner-SHA256-RSA
  WIN_SIGNED_PKG_FOLDER: OTelCollectorAuthenticode/AuthenticodeSigner-SHA256-RSA

jobs:
  get-testing-suites:
    runs-on: ubuntu-latest
    outputs:
      eks-matrix: ${{ steps.set-matrix.outputs.eks-matrix }}
      containerinsight-eks-prometheus-matrix: ${{ steps.set-matrix.outputs.containerinsight-eks-prometheus-matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.1.4

      - name: Get all the testing suites
        id: set-matrix
        run: |
          eks_matrix=$(python e2etest/get-testcases.py eks_matrix)
          containerinsight_eks_prometheus_matrix=$(python e2etest/get-testcases.py containerinsight_eks_prometheus_matrix)
          echo "::set-output name=eks-matrix::$eks_matrix"
          echo "::set-output name=containerinsight-eks-prometheus-matrix::$containerinsight_eks_prometheus_matrix"
      - name: List testing suites
        run: |
          echo ${{ steps.set-matrix.outputs.eks-matrix }}
          echo ${{ steps.set-matrix.outputs.containerinsight-eks-prometheus-matrix }}

  e2etest-containerinsight-eks-prometheus:
    runs-on: ubuntu-latest
    needs: [ get-testing-suites]
    strategy:
      max-parallel: 5
      matrix: ${{ fromJson(needs.get-testing-suites.outputs.containerinsight-eks-prometheus-matrix) }}

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check out testing framework
        uses: actions/checkout@v2
        with:
          repository: 'bjrara/aws-otel-test-framework'
          path: testing-framework

      - name: Run testing suite on eks
        run: |
          if [[ -f testing-framework/terraform/testcases/${{ matrix.testcase }}/parameters.tfvars ]] ; then opts="-var-file=../testcases/${{ matrix.testcase }}/parameters.tfvars" ; else opts="" ; fi
          cd testing-framework/terraform/containerinsight_eks_prometheus && terraform init && terraform apply -auto-approve -lock=false $opts -var="testcase=../testcases/${{ matrix.testcase }}"

      - name: Destroy resources
        if: ${{ always() }}
        run: |
          cd testing-framework/terraform/containerinsight_eks_prometheus && terraform destroy -var="testcase=../testcases/${{ matrix.testcase }}" -auto-approve

